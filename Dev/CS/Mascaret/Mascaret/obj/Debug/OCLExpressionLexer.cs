//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Utilisateur\Developpement\MascaretGit\MascaretGit\Dev\CS\Mascaret\Mascaret\VEHA\Kernel\OCLExpression.g4 by ANTLR 4.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace Mascaret {

using System;
using System.Collections;
using System.Collections.Generic;

using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.3")]
[System.CLSCompliant(false)]
public partial class OCLExpressionLexer : Lexer {
	public const int
		T__4=1, T__3=2, T__2=3, T__1=4, T__0=5, LPAREN=6, RPAREN=7, COLON=8, EQUAL=9, 
		NEQUAL=10, LT=11, GT=12, LE=13, GE=14, RARROW=15, DOTDOT=16, DOT=17, POUND=18, 
		SEMICOL=19, PLUS=20, MINUS=21, MULT=22, DIVIDE=23, DIGIT=24, STRING=25, 
		WS=26;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'"
	};
	public static readonly string[] ruleNames = {
		"T__4", "T__3", "T__2", "T__1", "T__0", "LPAREN", "RPAREN", "COLON", "EQUAL", 
		"NEQUAL", "LT", "GT", "LE", "GE", "RARROW", "DOTDOT", "DOT", "POUND", 
		"SEMICOL", "PLUS", "MINUS", "MULT", "DIVIDE", "DIGIT", "STRING", "WS"
	};


		public Dictionary<string, ValueSpecification> context;
		private ValueSpecification lvalue;
		public ValueSpecification value;



	public OCLExpressionLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	public override string GrammarFileName { get { return "OCLExpression.g4"; } }

	public override string[] TokenNames { get { return tokenNames; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x1C\x86\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x3\x2\x3\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x4\x3\x4\x3"+
		"\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6"+
		"\x3\x6\x3\x6\x3\a\x3\a\x3\b\x3\b\x3\t\x3\t\x3\n\x3\n\x3\v\x3\v\x3\v\x3"+
		"\f\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF\x3\x10\x3\x10\x3"+
		"\x10\x3\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3\x14\x3\x14\x3"+
		"\x15\x3\x15\x3\x16\x3\x16\x3\x17\x3\x17\x3\x18\x3\x18\x3\x19\x3\x19\x3"+
		"\x1A\x3\x1A\x6\x1A|\n\x1A\r\x1A\xE\x1A}\x3\x1B\x6\x1B\x81\n\x1B\r\x1B"+
		"\xE\x1B\x82\x3\x1B\x3\x1B\x2\x2\x2\x1C\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2"+
		"\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE"+
		"\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2"+
		"\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x3\x2\x6"+
		"\x3\x2\x32;\x5\x2\x43\\\x61\x61\x63|\x5\x2\x32;\x43\\\x63|\x5\x2\v\f\xF"+
		"\xF\"\"\x87\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t"+
		"\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11"+
		"\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2"+
		"\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2"+
		"\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2"+
		"\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31"+
		"\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x3\x37\x3\x2\x2\x2"+
		"\x5;\x3\x2\x2\x2\a>\x3\x2\x2\x2\t\x46\x3\x2\x2\x2\vJ\x3\x2\x2\x2\rN\x3"+
		"\x2\x2\x2\xFP\x3\x2\x2\x2\x11R\x3\x2\x2\x2\x13T\x3\x2\x2\x2\x15V\x3\x2"+
		"\x2\x2\x17Y\x3\x2\x2\x2\x19[\x3\x2\x2\x2\x1B]\x3\x2\x2\x2\x1D`\x3\x2\x2"+
		"\x2\x1F\x63\x3\x2\x2\x2!\x66\x3\x2\x2\x2#i\x3\x2\x2\x2%k\x3\x2\x2\x2\'"+
		"m\x3\x2\x2\x2)o\x3\x2\x2\x2+q\x3\x2\x2\x2-s\x3\x2\x2\x2/u\x3\x2\x2\x2"+
		"\x31w\x3\x2\x2\x2\x33y\x3\x2\x2\x2\x35\x80\x3\x2\x2\x2\x37\x38\az\x2\x2"+
		"\x38\x39\aq\x2\x2\x39:\at\x2\x2:\x4\x3\x2\x2\x2;<\aq\x2\x2<=\at\x2\x2"+
		"=\x6\x3\x2\x2\x2>?\ak\x2\x2?@\ao\x2\x2@\x41\ar\x2\x2\x41\x42\an\x2\x2"+
		"\x42\x43\ak\x2\x2\x43\x44\ag\x2\x2\x44\x45\au\x2\x2\x45\b\x3\x2\x2\x2"+
		"\x46G\a\x63\x2\x2GH\ap\x2\x2HI\a\x66\x2\x2I\n\x3\x2\x2\x2JK\ap\x2\x2K"+
		"L\aq\x2\x2LM\av\x2\x2M\f\x3\x2\x2\x2NO\a*\x2\x2O\xE\x3\x2\x2\x2PQ\a+\x2"+
		"\x2Q\x10\x3\x2\x2\x2RS\a<\x2\x2S\x12\x3\x2\x2\x2TU\a?\x2\x2U\x14\x3\x2"+
		"\x2\x2VW\a>\x2\x2WX\a@\x2\x2X\x16\x3\x2\x2\x2YZ\a>\x2\x2Z\x18\x3\x2\x2"+
		"\x2[\\\a@\x2\x2\\\x1A\x3\x2\x2\x2]^\a>\x2\x2^_\a?\x2\x2_\x1C\x3\x2\x2"+
		"\x2`\x61\a@\x2\x2\x61\x62\a?\x2\x2\x62\x1E\x3\x2\x2\x2\x63\x64\a/\x2\x2"+
		"\x64\x65\a@\x2\x2\x65 \x3\x2\x2\x2\x66g\a\x30\x2\x2gh\a\x30\x2\x2h\"\x3"+
		"\x2\x2\x2ij\a\x30\x2\x2j$\x3\x2\x2\x2kl\a%\x2\x2l&\x3\x2\x2\x2mn\a=\x2"+
		"\x2n(\x3\x2\x2\x2op\a-\x2\x2p*\x3\x2\x2\x2qr\a/\x2\x2r,\x3\x2\x2\x2st"+
		"\a,\x2\x2t.\x3\x2\x2\x2uv\a\x31\x2\x2v\x30\x3\x2\x2\x2wx\t\x2\x2\x2x\x32"+
		"\x3\x2\x2\x2y{\t\x3\x2\x2z|\t\x4\x2\x2{z\x3\x2\x2\x2|}\x3\x2\x2\x2}{\x3"+
		"\x2\x2\x2}~\x3\x2\x2\x2~\x34\x3\x2\x2\x2\x7F\x81\t\x5\x2\x2\x80\x7F\x3"+
		"\x2\x2\x2\x81\x82\x3\x2\x2\x2\x82\x80\x3\x2\x2\x2\x82\x83\x3\x2\x2\x2"+
		"\x83\x84\x3\x2\x2\x2\x84\x85\b\x1B\x2\x2\x85\x36\x3\x2\x2\x2\x6\x2{}\x82"+
		"\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Mascaret
