//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Utilisateur\Developpement\Mascaret\Mascaret\Dev\CS\Mascaret\Mascaret\BEHAVE\FipaSL.g4 by ANTLR 4.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace Mascaret {

using System;
using System.Collections;
using System.Collections.Generic;

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="FipaSLParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.3")]
[System.CLSCompliant(false)]
public interface IFipaSLVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="FipaSLParser.agent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAgent([NotNull] FipaSLParser.AgentContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FipaSLParser.atomicformula"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAtomicformula([NotNull] FipaSLParser.AtomicformulaContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FipaSLParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstant([NotNull] FipaSLParser.ConstantContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FipaSLParser.numericalconstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumericalconstant([NotNull] FipaSLParser.NumericalconstantContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FipaSLParser.contentexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContentexpression([NotNull] FipaSLParser.ContentexpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FipaSLParser.integer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInteger([NotNull] FipaSLParser.IntegerContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FipaSLParser.float"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFloat([NotNull] FipaSLParser.FloatContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FipaSLParser.content"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContent([NotNull] FipaSLParser.ContentContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FipaSLParser.variableidentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableidentifier([NotNull] FipaSLParser.VariableidentifierContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FipaSLParser.identifyingexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifyingexpression([NotNull] FipaSLParser.IdentifyingexpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FipaSLParser.proposition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProposition([NotNull] FipaSLParser.PropositionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FipaSLParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameter([NotNull] FipaSLParser.ParameterContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FipaSLParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTerm([NotNull] FipaSLParser.TermContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FipaSLParser.parametername"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParametername([NotNull] FipaSLParser.ParameternameContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FipaSLParser.actionop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitActionop([NotNull] FipaSLParser.ActionopContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FipaSLParser.parametervalue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParametervalue([NotNull] FipaSLParser.ParametervalueContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FipaSLParser.binarytempop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBinarytempop([NotNull] FipaSLParser.BinarytempopContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FipaSLParser.actionexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitActionexpression([NotNull] FipaSLParser.ActionexpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FipaSLParser.functionalterm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionalterm([NotNull] FipaSLParser.FunctionaltermContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FipaSLParser.propositionsymbol"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPropositionsymbol([NotNull] FipaSLParser.PropositionsymbolContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FipaSLParser.wff"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWff([NotNull] FipaSLParser.WffContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FipaSLParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariable([NotNull] FipaSLParser.VariableContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FipaSLParser.functionsymbol"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionsymbol([NotNull] FipaSLParser.FunctionsymbolContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FipaSLParser.referentialoperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReferentialoperator([NotNull] FipaSLParser.ReferentialoperatorContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="FipaSLParser.predicatesymbol"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPredicatesymbol([NotNull] FipaSLParser.PredicatesymbolContext context);
}
} // namespace Mascaret
